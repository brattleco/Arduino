// final program for red player
//shoot for red player
// left and right red player

int motorpin1 = 3;  
int EnA = 5;
int motorpin2 = 6;

int motorpin3 = 9;  
int EnB = 10;
int motorpin4 = 11;

int incomingByte = 0;

 #include <MPU6050.h>

 MPU6050 sensor ;
 
 int16_t ax, ay, az ;
 int16_t gx, gy, gz ;

void setup()
{
  pinMode(motorpin1,OUTPUT);
  pinMode(EnA,OUTPUT);
  pinMode(motorpin2,OUTPUT);
  
  pinMode(motorpin3, OUTPUT);
  pinMode (EnB,OUTPUT );
  pinMode (motorpin4,OUTPUT);
  
  pinMode(7,INPUT);
  pinMode(8,INPUT);
  pinMode(13,OUTPUT);

  
  pinMode(12, OUTPUT);    // RESET
 // pinMode(12,LOW);  
      //----------------- gyro -------------
Serial.begin  (115200); 
Serial.println  ( "Initializing the sensor" ); 
sensor.initialize ( ); 
Serial.println (sensor.testConnection ( ) ? "Successfully Connected" : "Connection failed"); 
delay (1000); 
Serial.println ( "Taking Values from the sensor" );
delay (1000);
//----------------------------------------
  
}


void loop()
{

//------------- gyro -------------
sensor.getMotion6 (&ax, &ay, &az, &gx, &gy, &gz);
ax = map (ax, -17000, 17000, -180, 180) ;
Serial.println (ax);

//-------------------------------------
      //back red player after shoot
        if (ax >= -180 && ax<=-1){
      in(250,250,0);
    }else{
      in(0,0,0);
    }
    // back again red player after shoot, for correction
    if (ax >= 125 && ax<=160){
      in(0,250,250);
    }
    
          
int left_red = digitalRead(7);
int right_red = digitalRead(8);

if (left_red == HIGH )
{ 
    out(0,255,255);
    delay(10);
    out(0,0,0);
}
if (left_red == LOW )
{ 
    out(0,0,0);
  //  delay(200);
}
if (right_red == HIGH){
  out(255,255,0);
  delay(10);
  out(0,0,0);
}
if (right_red == LOW )
{ 
    out(0,0,0);
 //   delay(200);
}
     
if (Serial.available() > 0) {

incomingByte = Serial.read();  
if (incomingByte == 'B') 
  {
    buzzer();

    shootB();
    
   delay(500);
   digitalWrite(12, HIGH);
     delay(20);
     digitalWrite(12,LOW);
  //   delay(50);

}
}
} 
void out (int motorpin1val , int EnAval , int motorpin2val) {
  analogWrite (motorpin1 , motorpin1val);
   analogWrite (EnA , EnAval);
    analogWrite (motorpin2 , motorpin2val);
  
}


void in (int motorpin3val , int EnBval , int motorpin4val) {
  analogWrite (motorpin3 , motorpin3val);
   analogWrite (EnB , EnBval);
    analogWrite (motorpin4 , motorpin4val);
  
}

void shootB(){
    in(255,255,0);
    delay(300);
    
    in(0,0,0);
     delay(1000);
     
     in(0,255,255);
     delay(450);
     
     in(0,0,0);
     delay(200);
     
 /*   in(0,255,255);
    delay(200);
    in(0,0,0);
     delay(1000);
      */
  //  incomingByte = 'd';
  //  delay(1000);
}
void buzzer(){
  digitalWrite(13,HIGH);         //buzzer
   delay(200);
   digitalWrite(13,LOW);
   delay(50);
   digitalWrite(13,HIGH);         //buzzer
   delay(200);
   digitalWrite(13,LOW);
   delay(50);
   digitalWrite(13,HIGH);         //buzzer
   delay(200);
   digitalWrite(13,LOW);
   delay(50);
   digitalWrite(13,HIGH);         //buzzer
   delay(200);
   digitalWrite(13,LOW);
   delay(50);
  // digitalWrite(13,HIGH);         //buzzer
  // delay(100);
  // digitalWrite(13,LOW);
  // delay(100); 
}
